{"version":3,"sources":["../../../src/directives/mutate/index.ts"],"names":["mounted","el","binding","modifiers","value","once","immediate","modifierKeys","defaultValue","Object","keys","length","handler","options","attributes","attr","characterData","char","childList","child","subtree","sub","observer","MutationObserver","mutations","unmounted","_mutate","observe","disconnect","Mutate"],"mappings":"AAAA;AASA,SAASA,OAAT,CAAkBC,EAAlB,EAAmCC,OAAnC,EAAsE;AAAA;;AACpE,QAAMC,SAAS,GAAGD,OAAO,CAACC,SAAR,IAAqB,EAAvC;AACA,QAAMC,KAAK,GAAGF,OAAO,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmB,OAAGC;AAAtB,MAAuCJ,SAA7C;AACA,QAAMK,YAAY,GAAG,CAACC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAAhD;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuB,OAAOT,KAAP,KAAiB,QAAjB,GACzBA,KADyB,GAEzB;AACAQ,IAAAA,OAAO,EAAER,KADT;AAEAS,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,wBAAEP,YAAF,oBAAEA,YAAY,CAAEQ,IAAhB,iCAAwBP,YAD3B;AAEPQ,MAAAA,aAAa,wBAAET,YAAF,oBAAEA,YAAY,CAAEU,IAAhB,iCAAwBT,YAF9B;AAGPU,MAAAA,SAAS,yBAAEX,YAAF,oBAAEA,YAAY,CAAEY,KAAhB,kCAAyBX,YAH3B;AAIPY,MAAAA,OAAO,uBAAEb,YAAF,oBAAEA,YAAY,CAAEc,GAAhB,gCAAuBb;AAJvB;AAFT,GAFJ;AAYA,QAAMc,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB,CACpCC,SAA2B,GAAG,EADM,EAEpCF,QAFoC,KAGjC;AACHV,IAAAA,OAAO,QAAP,YAAAA,OAAO,CAAGY,SAAH,EAAcF,QAAd,CAAP;AAEA,QAAIjB,IAAJ,EAAUoB,SAAS,CAACxB,EAAD,CAAT;AACX,GAPgB,CAAjB;AASA,MAAIK,SAAJ,EAAeM,OAAO,QAAP,YAAAA,OAAO,CAAG,EAAH,EAAOU,QAAP,CAAP;AAEfrB,EAAAA,EAAE,CAACyB,OAAH,GAAa;AAAEJ,IAAAA;AAAF,GAAb;AAEAA,EAAAA,QAAQ,CAACK,OAAT,CAAiB1B,EAAjB,EAAqBY,OAArB;AACD;;AAED,SAASY,SAAT,CAAoBxB,EAApB,EAAqC;AAAA;;AACnCA,EAAAA,EAAE,QAAF,2BAAAA,EAAE,CAAEyB,OAAJ,yDAAaJ,QAAb,0CAAuBM,UAAvB;AACA,SAAO3B,EAAE,CAACyB,OAAV;AACD;;AAED,OAAO,MAAMG,MAAoC,GAAG;AAClD7B,EAAAA,OADkD;AAElDyB,EAAAA;AAFkD,CAA7C;AAKP,eAAeI,MAAf","sourcesContent":["// Types\nimport type { DirectiveBinding, ObjectDirective } from 'vue'\nimport type { MutationOptions } from '@/composables/mutationObserver'\n\nexport interface MutationDirectiveBinding extends Omit<DirectiveBinding, 'modifiers' | 'value'> {\n  value: MutationCallback | { handler: MutationCallback, options?: MutationObserverInit }\n  modifiers: MutationOptions\n}\n\nfunction mounted (el: HTMLElement, binding: MutationDirectiveBinding) {\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const { once, immediate, ...modifierKeys } = modifiers\n  const defaultValue = !Object.keys(modifierKeys).length\n\n  const { handler, options } = typeof value === 'object'\n    ? value\n    : {\n      handler: value,\n      options: {\n        attributes: modifierKeys?.attr ?? defaultValue,\n        characterData: modifierKeys?.char ?? defaultValue,\n        childList: modifierKeys?.child ?? defaultValue,\n        subtree: modifierKeys?.sub ?? defaultValue,\n      },\n    }\n\n  const observer = new MutationObserver((\n    mutations: MutationRecord[] = [],\n    observer: MutationObserver\n  ) => {\n    handler?.(mutations, observer)\n\n    if (once) unmounted(el)\n  })\n\n  if (immediate) handler?.([], observer)\n\n  el._mutate = { observer }\n\n  observer.observe(el, options)\n}\n\nfunction unmounted (el: HTMLElement) {\n  el?._mutate?.observer?.disconnect()\n  delete el._mutate\n}\n\nexport const Mutate: ObjectDirective<HTMLElement> = {\n  mounted,\n  unmounted,\n}\n\nexport default Mutate\n"],"file":"index.mjs"}