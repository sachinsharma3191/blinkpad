{"version":3,"sources":["../../../src/components/VTextField/VTextField.tsx"],"names":["makeVFieldProps","VCounter","VField","useProxiedModel","Intersect","computed","ref","defineComponent","pick","useRender","dirtyTypes","VTextField","name","directives","inheritAttrs","props","autofocus","Boolean","counter","Number","String","counterValue","Function","prefix","placeholder","persistentPlaceholder","suffix","type","default","modelValue","emits","val","setup","attrs","emit","slots","model","internalDirty","isDirty","value","includes","toString","length","onIntersect","isIntersecting","entries","target","focus","fieldRef","inputRef","blur","hasCounter","_","restAttrs","class","e","stopPropagation","isActive","fieldClass","slotProps","showPlaceholder","opacity","undefined","disabled","handler","details","maxlength"],"mappings":"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","sourcesContent":["// Styles\nimport './VTextField.sass'\n\n// Components\nimport { makeVFieldProps } from '@/components/VField/VField'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { defineComponent, pick, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlot } from '@/components/VField/VField'\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\nexport const VTextField = defineComponent({\n  name: 'VTextField',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: {\n    autofocus: Boolean,\n    counter: [Boolean, Number, String] as PropType<true | number | string>,\n    counterValue: Function as PropType<(value: any) => number>,\n    prefix: String,\n    placeholder: String,\n    persistentPlaceholder: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n    modelValue: String,\n\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: string) => true as any,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n\n    const internalDirty = ref(false)\n    const isDirty = computed(() => {\n      return internalDirty.value || !!model.value || dirtyTypes.includes(props.type)\n    })\n\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function'\n        ? props.counterValue(model.value)\n        : model.value?.toString().length\n    })\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const fieldRef = ref<VField>()\n    function focus () {\n      fieldRef.value?.inputRef?.focus()\n    }\n    function blur () {\n      fieldRef.value?.inputRef?.blur()\n    }\n\n    useRender(() => {\n      const hasCounter = (slots.counter || props.counter || props.counterValue)\n      const [_, restAttrs] = pick(attrs, ['class'])\n\n      return (\n        <VField\n          ref={ fieldRef }\n          class={[\n            'v-text-field',\n            {\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n            },\n            attrs.class,\n          ]}\n          active={ isDirty.value }\n          onUpdate:active={ val => internalDirty.value = val }\n          onClick:control={ focus }\n          onClick:clear={ e => {\n            e.stopPropagation()\n\n            model.value = ''\n          }}\n          role=\"textbox\"\n          { ...attrs }\n          { ...props }\n          v-slots={{\n            ...slots,\n            default: ({\n              isActive,\n              inputRef,\n              props: { class: fieldClass, ...slotProps },\n            }: VFieldSlot) => {\n              const showPlaceholder = isActive || props.persistentPlaceholder\n              return (\n                <>\n                  { props.prefix && (\n                    <span class=\"v-text-field__prefix\" style={{ opacity: showPlaceholder ? undefined : '0' }}>\n                      { props.prefix }\n                    </span>\n                  ) }\n\n                  <input\n                    class={ fieldClass }\n                    style={{ opacity: showPlaceholder ? undefined : '0' }} // can't this just be a class?\n                    v-model={ model.value }\n                    v-intersect={[{\n                      handler: onIntersect,\n                    }, null, ['once']]}\n                    ref={ inputRef }\n                    autofocus={ props.autofocus }\n                    disabled={ props.disabled }\n                    placeholder={ props.placeholder }\n                    size={ 1 }\n                    type={ props.type }\n                    { ...slotProps }\n                    { ...restAttrs }\n                  />\n\n                  { props.suffix && (\n                    <span class=\"v-text-field__suffix\" style={{ opacity: showPlaceholder ? undefined : '0' }}>\n                      { props.suffix }\n                    </span>\n                  ) }\n                </>\n              )\n            },\n            details: hasCounter ? () => (\n              <>\n                <span />\n\n                <VCounter\n                  value={ counterValue.value }\n                  max={ attrs.maxlength as undefined }\n                  v-slots={ slots.counter }\n                />\n              </>\n            ) : undefined,\n          }}\n        />\n      )\n    })\n\n    return {\n      fieldRef,\n      focus,\n      blur,\n    }\n  },\n})\n"],"file":"VTextField.mjs"}