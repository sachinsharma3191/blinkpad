{"version":3,"sources":["../../../src/components/VOverlay/VOverlay.tsx"],"names":["makeActivatorProps","useActivator","makePositionStrategyProps","usePositionStrategies","makeScrollStrategyProps","useScrollStrategies","makeThemeProps","useTheme","makeTransitionProps","MaybeTransition","useBackButton","useBackgroundColor","useProxiedModel","useRtl","useTeleport","makeDimensionProps","useDimension","makeLazyProps","useLazy","ClickOutside","convertToUnit","defineComponent","getScrollParent","standardEasing","useRender","computed","mergeProps","ref","Teleport","toHandlers","toRef","Transition","watch","Scrim","props","modelValue","color","rest","backgroundColorClasses","value","backgroundColorStyles","name","directives","inheritAttrs","absolute","Boolean","attach","type","String","Object","default","contentClass","noClickAnimation","persistent","scrim","emits","e","setup","slots","attrs","emit","isActive","teleportTarget","themeClasses","rtlClasses","hasContent","onAfterLeave","scrimColor","activatorEl","activatorEvents","dimensionStyles","contentEl","contentStyles","updatePosition","onClickOutside","animateClick","closeConditional","onKeydown","key","next","root","top","val","scrollParent","document","scrollingElement","scrollTop","animate","transformOrigin","transform","duration","easing","activator","activatorProps","undefined","transition","handler","include"],"mappings":"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","sourcesContent":["// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { makePositionStrategyProps, usePositionStrategies } from './positionStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton } from '@/composables/router'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/rtl'\nimport { useTeleport } from '@/composables/teleport'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  convertToUnit,\n  defineComponent,\n  getScrollParent,\n  standardEasing,\n  useRender,\n} from '@/util'\nimport {\n  computed,\n  mergeProps,\n  ref,\n  Teleport,\n  toHandlers,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { BackgroundColorData } from '@/composables/color'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport default defineComponent({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    absolute: Boolean,\n    attach: {\n      type: [Boolean, String, Object] as PropType<boolean | string | Element>,\n      default: 'body',\n    },\n    contentClass: null,\n    noClickAnimation: Boolean,\n    modelValue: Boolean,\n    persistent: Boolean,\n    scrim: {\n      type: [String, Boolean],\n      default: true,\n    },\n\n    ...makeActivatorProps(),\n    ...makeDimensionProps(),\n    ...makePositionStrategyProps(),\n    ...makeScrollStrategyProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps(),\n    ...makeLazyProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { teleportTarget } = useTeleport(toRef(props, 'attach'))\n    const { themeClasses } = useTheme(props)\n    const { rtlClasses } = useRtl()\n    const { hasContent, onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { activatorEl, activatorEvents } = useActivator(props, isActive)\n    const { dimensionStyles } = useDimension(props)\n\n    const contentEl = ref<HTMLElement>()\n    const { contentStyles, updatePosition } = usePositionStrategies(props, {\n      contentEl,\n      activatorEl,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      contentEl,\n      activatorEl,\n      isActive,\n      updatePosition,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    useBackButton(next => {\n      next(!isActive.value)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    })\n\n    const root = ref()\n    const top = ref<number>()\n    watch(() => isActive.value && props.absolute && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value?.animate([\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: mergeProps({\n            modelValue: isActive.value,\n            'onUpdate:modelValue': (val: boolean) => isActive.value = val,\n          }, toHandlers(activatorEvents.value), props.activatorProps),\n        }) }\n        <Teleport\n          disabled={ !teleportTarget.value }\n          ref={ root }\n          to={ teleportTarget.value }\n        >\n          { hasContent.value && (\n            <div\n              class={[\n                'v-overlay',\n                {\n                  'v-overlay--absolute': props.absolute,\n                  'v-overlay--active': isActive.value,\n                },\n                themeClasses.value,\n                rtlClasses.value,\n              ]}\n              style={ top.value != null ? `top: ${convertToUnit(top.value)}` : undefined }\n              {...attrs}\n            >\n              <Scrim\n                color={ scrimColor }\n                modelValue={ isActive.value && !!props.scrim }\n              />\n              <MaybeTransition\n                appear\n                onAfterLeave={ onAfterLeave }\n                persisted\n                transition={ props.transition }\n                target={ activatorEl.value }\n              >\n                <div\n                  ref={ contentEl }\n                  v-show={ isActive.value }\n                  v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                  class={[\n                    'v-overlay__content',\n                    props.contentClass,\n                  ]}\n                  style={[\n                    dimensionStyles.value,\n                    contentStyles.value,\n                  ]}\n                  onKeydown={ onKeydown }\n                >\n                  { slots.default?.({ isActive }) }\n                </div>\n              </MaybeTransition>\n            </div>\n          )}\n        </Teleport>\n      </>\n    ))\n\n    return {\n      animateClick,\n      contentEl,\n      activatorEl,\n    }\n  },\n})\n"],"file":"VOverlay.mjs"}