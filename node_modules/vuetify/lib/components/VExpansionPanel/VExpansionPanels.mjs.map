{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanels.tsx"],"names":["makeTagProps","makeGroupProps","useGroup","makeThemeProps","useTheme","computed","defineComponent","VExpansionPanelSymbol","Symbol","for","allowedVariants","name","props","variant","type","String","default","validator","v","includes","setup","slots","themeClasses","variantClass","value"],"mappings":";AAAA;AACA,+B,CAEA;;SACSA,Y;SACAC,c,EAAgBC,Q;SAChBC,c,EAAgBC,Q,uCAEzB;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,e,gCAET;;AAIA,OAAO,MAAMC,qBAAqD,GAAGC,MAAM,CAACC,GAAP,CAAW,2BAAX,CAA9D;AAEP,MAAMC,eAAe,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,QAAlC,CAAxB;AAGA,eAAeJ,eAAe,CAAC;AAC7BK,EAAAA,IAAI,EAAE,kBADuB;AAG7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEC,MADC;AAEPC,MAAAA,OAAO,EAAE,SAFF;AAGPC,MAAAA,SAAS,EAAGC,CAAD,IAAYR,eAAe,CAACS,QAAhB,CAAyBD,CAAzB;AAHhB,KADJ;AAOL,OAAGlB,YAAY,EAPV;AAQL,OAAGC,cAAc,EARZ;AASL,OAAGE,cAAc;AATZ,GAHsB;;AAe7BiB,EAAAA,KAAK,CAAER,KAAF,EAAS;AAAES,IAAAA;AAAF,GAAT,EAAoB;AACvBnB,IAAAA,QAAQ,CAACU,KAAD,EAAQL,qBAAR,CAAR;AACA,UAAM;AAAEe,MAAAA;AAAF,QAAmBlB,QAAQ,CAACQ,KAAD,CAAjC;AAEA,UAAMW,YAAY,GAAGlB,QAAQ,CAAC,MAAMO,KAAK,CAACC,OAAN,IAAkB,+BAA8BD,KAAK,CAACC,OAAQ,EAArE,CAA7B;AAEA,WAAO;AAAA;;AAAA;AAAA,iBAEI,CACL,oBADK,EAELS,YAAY,CAACE,KAFR,EAGLD,YAAY,CAACC,KAHR;AAFJ;AAAA,0CAQDH,KAAK,CAACL,OARL,qBAQD,oBAAAK,KAAK,CARJ;AAAA;AAAA,KAAP;AAWD;;AAhC4B,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GroupItemProvide } from '@/composables/group'\n\nexport const VExpansionPanelSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-expansion-panel')\n\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport default defineComponent({\n  name: 'VExpansionPanels',\n\n  props: {\n    variant: {\n      type: String as PropType<Variant>,\n      default: 'default',\n      validator: (v: any) => allowedVariants.includes(v),\n    },\n\n    ...makeTagProps(),\n    ...makeGroupProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    useGroup(props, VExpansionPanelSymbol)\n    const { themeClasses } = useTheme(props)\n\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`)\n\n    return () => (\n      <props.tag\n        class={[\n          'v-expansion-panels',\n          themeClasses.value,\n          variantClass.value,\n        ]}\n      >\n        { slots.default?.() }\n      </props.tag>\n    )\n  },\n})\n"],"file":"VExpansionPanels.mjs"}