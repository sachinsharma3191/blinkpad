{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanel.tsx"],"names":["VExpansionPanelTitle","makeVExpansionPanelTitleProps","VExpansionPanelText","VExpansionPanelSymbol","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeRoundedProps","useRounded","useBackgroundColor","makeTagProps","makeLazyProps","computed","provide","defineComponent","name","props","title","String","text","bgColor","setup","slots","groupItem","roundedClasses","elevationClasses","isBeforeSelected","index","group","items","value","indexOf","id","isSelected","selected","some","isAfterSelected","backgroundColorClasses","backgroundColorStyles","disabled","default","expandIcon","collapseIcon","color","hideActions","ripple","eager"],"mappings":"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","sourcesContent":["// Components\nimport VExpansionPanelTitle, { makeVExpansionPanelTitleProps } from './VExpansionPanelTitle'\nimport VExpansionPanelText from './VExpansionPanelText'\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\n\n// Composables\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeLazyProps } from '@/composables/lazy'\n\n// Utilities\nimport { computed, provide } from 'vue'\nimport { defineComponent } from '@/util'\n\nexport default defineComponent({\n  name: 'VExpansionPanel',\n\n  props: {\n    title: String,\n    text: String,\n    bgColor: String,\n\n    ...makeLazyProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeElevationProps(),\n    ...makeTagProps(),\n    ...makeVExpansionPanelTitleProps(),\n  },\n\n  setup (props, { slots }) {\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol)\n    const { roundedClasses } = useRounded(props, 'v-expansion-panel')\n    const { elevationClasses } = useElevation(props)\n\n    provide(VExpansionPanelSymbol, groupItem)\n\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.indexOf(groupItem.id)\n      return !groupItem.isSelected.value &&\n        groupItem.group.selected.value.some(id => groupItem.group.items.value.indexOf(id) - index === 1)\n    })\n\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.indexOf(groupItem.id)\n      return !groupItem.isSelected.value &&\n        groupItem.group.selected.value.some(id => groupItem.group.items.value.indexOf(id) - index === -1)\n    })\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'bgColor')\n\n    return () => (\n      <props.tag\n        class={[\n          'v-expansion-panel',\n          {\n            'v-expansion-panel--active': groupItem.isSelected.value,\n            'v-expansion-panel--before-active': isBeforeSelected.value,\n            'v-expansion-panel--after-active': isAfterSelected.value,\n            'v-expansion-panel--disabled': groupItem.disabled.value,\n          },\n          roundedClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={ backgroundColorStyles.value }\n        aria-expanded={ groupItem.isSelected.value }\n      >\n        <div\n          class={[\n            'v-expansion-panel__shadow',\n            ...elevationClasses.value,\n          ]}\n        />\n        { slots.default?.() || (\n          <>\n            <VExpansionPanelTitle\n              expandIcon={ props.expandIcon }\n              collapseIcon={ props.collapseIcon }\n              color={ props.color }\n              hideActions={ props.hideActions }\n              ripple={ props.ripple }\n            >\n              { slots.title ? slots.title() : props.title }\n            </VExpansionPanelTitle>\n            <VExpansionPanelText eager={ props.eager }>\n              { slots.text ? slots.text() : props.text }\n            </VExpansionPanelText>\n          </>\n        ) }\n      </props.tag>\n    )\n  },\n})\n"],"file":"VExpansionPanel.mjs"}